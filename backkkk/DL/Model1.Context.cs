//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BancoEntities : DbContext
    {
        public BancoEntities()
            : base("name=BancoEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Clientes> Clientes { get; set; }
        public virtual DbSet<Tarjetas> Tarjetas { get; set; }
    
        public virtual ObjectResult<Nullable<int>> GetSaldo(Nullable<int> noTarjeta)
        {
            var noTarjetaParameter = noTarjeta.HasValue ?
                new ObjectParameter("NoTarjeta", noTarjeta) :
                new ObjectParameter("NoTarjeta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetSaldo", noTarjetaParameter);
        }
    
        public virtual ObjectResult<string> GetTarjeta(Nullable<int> noTarjeta)
        {
            var noTarjetaParameter = noTarjeta.HasValue ?
                new ObjectParameter("NoTarjeta", noTarjeta) :
                new ObjectParameter("NoTarjeta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetTarjeta", noTarjetaParameter);
        }
    
        public virtual int RetiroSaldo(Nullable<int> noTarjeta, Nullable<int> saldo)
        {
            var noTarjetaParameter = noTarjeta.HasValue ?
                new ObjectParameter("NoTarjeta", noTarjeta) :
                new ObjectParameter("NoTarjeta", typeof(int));
    
            var saldoParameter = saldo.HasValue ?
                new ObjectParameter("Saldo", saldo) :
                new ObjectParameter("Saldo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RetiroSaldo", noTarjetaParameter, saldoParameter);
        }
    
        public virtual ObjectResult<GetNip_Result> GetNip(Nullable<int> noTarjeta, Nullable<int> nip)
        {
            var noTarjetaParameter = noTarjeta.HasValue ?
                new ObjectParameter("NoTarjeta", noTarjeta) :
                new ObjectParameter("NoTarjeta", typeof(int));
    
            var nipParameter = nip.HasValue ?
                new ObjectParameter("Nip", nip) :
                new ObjectParameter("Nip", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNip_Result>("GetNip", noTarjetaParameter, nipParameter);
        }
    }
}
